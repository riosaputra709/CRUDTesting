@model WEBCRUDTESTING.Models.ProductModel
@{
    ViewData["Title"] = "Home Page";

    Layout = null;

    List<ProductModel> products = (List<ProductModel>)ViewData["products"];
}
<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Home</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <!-- Box Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">

</head>
<body>

    <div id="divModalAddEdit">
        @Html.Partial("_ModalAddEdit")
    </div>

    <div class="container" style="margin-top:30px;margin-bottom:15px">
        <form method="post" asp-controller="Home" asp-action="Index">
            <div class="form-control w-50 h-25">
                <div class="mb-3">
                    <label for="ProductName" class="form-label">Product Name</label>
                    <input type="text" class="form-control" id="name" asp-for="name">
                </div>

                <button type="submit" class="btn btn-outline-info"><i class='bx bx-filter-alt'></i>Search</button>
            </div>
        </form>


        <a class="btn btn-primary btn-sm m-2" onclick="btnAdd_onClick();">
            <i class='bx bx-layer-plus'></i>
            Tambah Produk
        </a>

        <table id="myTable" class="table" style="margin-top:20px;">
            <thead>
                <tr>
                    <th scope="col">No</th>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Price</th>
                    <th scope="col">Created At</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>

                @if (products != null){
                    if (products.Count != 0)
                    {
                        @for (int i = 0; i < products.Count; i++)
                        {
                            <tr>
                                <td scope="row">@products[i].id</td>
                                <td>@products[i].name</td>
                                <td>@products[i].description</td>
                                <td>@products[i].price</td>
                                <td>@products[i].createdAt</td>
                                <td>
                                    <a class="btn btn-warning btn-sm" onclick="onEdit_onClick(@products[i].id)"><i class='bx bx-edit-alt'></i>Edit</a>
                                    <a class="btn btn-danger btn-sm" onclick="onDelete_onClick(@products[i].id)"><i class='bx bxs-trash-alt'></i>Delete</a>
                                </td>
                            </tr>
                        }
                    }

                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center" id="empty">No Data</td>
                        </tr>
                    }
                }


            </tbody>
        </table>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">

        var gScreenMode = null;
        var urlApi = 'https://localhost:7265/api/ManagementProduct/';

        function btnAdd_onClick() {
            gScreenMode = "ADD";
            clearAddEdit();
            var myModal = new bootstrap.Modal(document.getElementById('modalAddEdit'));
            myModal.show();
        }

        function clearAddEdit() {
            $("#txtAddEditProductId").val('');
            $("#txtAddEditProductName").val('');
            $("#txtAddEditProductdescription").val('');
            $("#txtAddEditProductPrice").val('');
        }

        $("#btnSave").click(function () {
            if (validation() != 1) {
                

                if (gScreenMode === "ADD")
                {
                    var data = new Object();

                    data.id = $("#txtAddEditProductId").val(); 
                    data.name = $("#txtAddEditProductName").val();
                    data.description = $("#txtAddEditProductdescription").val();
                    data.price = $("#txtAddEditProductPrice").val();
                    data.createdAt = new Date().toISOString(); 

                    if (!data.id) {
                        data.id = 0;
                    }

                    $.ajax({
                        url: urlApi + 'AddProduct',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        success: function (response) {
                            alert("Product added successfully!");
                            $("#modalAddEdit").modal('hide');
                            location.reload();

                        },
                        error: function (xhr, status, error) {
                            alert("There was an error adding the product.");
                        }
                    });
                }
                else
                {
                    var updatedProduct = {
                        id: $("#txtAddEditProductId").val() ,
                        name: $("#txtAddEditProductName").val(),
                        description: $("#txtAddEditProductdescription").val(),
                        price: $("#txtAddEditProductPrice").val(),
                        createdAt: new Date().toISOString() 
                    };

                    fetch(urlApi + `UpdateProduct/${updatedProduct.id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(updatedProduct)
                    })
                    .then(response => {
                        if (response.ok) {
                            alert("Product updated successfully!");
                            location.reload();
                        } else {
                            throw new Error('Failed to update product');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert("An error occurred while updating the product.");
                    });
                }
            }
        });


        function validation() {
            var FlagErr = 0

            var product_name = $("#txtAddEditProductName").val();
            var product_desc = $("#txtAddEditProductdescription").val();
            var product_price = $("#txtAddEditProductPrice").val();


            if (product_name == null || product_name == '') {
                alert('ERROR JS : Product Name Should not be Empty');
                return FlagErr = 1
            }
            if (product_desc == null || product_desc == '') {
                alert('ERROR JS : Product Description Should not be Empty');
                return FlagErr = 1
            }
            if (product_price == null || product_price == '') {
                alert('ERROR JS : Product Price Should not be Empty');
                return FlagErr = 1
            }
            return FlagErr
        }

        function onDelete_onClick(id) {
            if (confirm("Are you sure you want to delete this product?")) {
                fetch(urlApi + `DeleteProduct/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Product deleted successfully!");
                        location.reload();
                    } else {
                        alert("Failed to delete the product.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred while deleting the product.");
                });
            }
        }

        function onEdit_onClick(id) {
            gScreenMode = "EDIT";
            fetch(urlApi + `GetSingleProduct/${id}`)
                .then(response => response.json())
                .then(data => {
                    var myModal = new bootstrap.Modal(document.getElementById('modalAddEdit'));
                    myModal.show();

                    // Populate fields
                    $("#txtAddEditProductId").val(data.id);
                    $("#txtAddEditProductName").val(data.name);
                    $("#txtAddEditProductdescription").val(data.description);
                    $("#txtAddEditProductPrice").val(data.price);
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred while fetching the product data.");
                });
        }

    </script>

</body>
</html>
